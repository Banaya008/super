# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `selenium-webdriver` gem.
# Please instead update this file by running `bin/tapioca gem selenium-webdriver`.

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#20
module Selenium; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#21
module Selenium::WebDriver
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver.rb#87
    def for(*args); end

    # source://selenium-webdriver//lib/selenium/webdriver.rb#97
    def logger; end

    # source://selenium-webdriver//lib/selenium/webdriver.rb#49
    def root; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#38
class Selenium::WebDriver::ActionBuilder
  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#43
  def initialize(mouse, keyboard); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#203
  def click(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#162
  def click_and_hold(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#299
  def context_click(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#222
  def double_click(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#321
  def drag_and_drop(source, target); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#344
  def drag_and_drop_by(source, right_by, down_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#80
  def key_down(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#109
  def key_up(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#281
  def move_by(right_by, down_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#252
  def move_to(element, right_by = T.unsafe(nil), down_by = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#356
  def perform; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#178
  def release(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/action_builder.rb#140
  def send_keys(*args); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#22
class Selenium::WebDriver::Alert
  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#23
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#30
  def accept; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#34
  def dismiss; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#38
  def send_keys(keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/alert.rb#42
  def text; end
end

# source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#22
module Selenium::WebDriver::Atoms
  private

  # source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#30
  def execute_atom(function_name, *arguments); end

  # source://selenium-webdriver//lib/selenium/webdriver/atoms.rb#26
  def read_atom(function); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/bridge_helper.rb#28
module Selenium::WebDriver::BridgeHelper
  # source://selenium-webdriver//lib/selenium/webdriver/common/bridge_helper.rb#43
  def element_id_from(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/bridge_helper.rb#47
  def parse_cookie_string(str); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/bridge_helper.rb#29
  def unwrap_script_result(arg); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#22
module Selenium::WebDriver::Chrome
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/chrome.rb#36
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/chrome.rb#30
    def driver_path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/chrome.rb#47
    def path; end

    # source://selenium-webdriver//lib/selenium/webdriver/chrome.rb#42
    def path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#23
module Selenium::WebDriver::Chrome::Bridge
  # source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#49
  def available_log_types; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#33
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#54
  def log(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#37
  def network_conditions; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#45
  def network_conditions=(conditions); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#41
  def send_command(command_params); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/bridge.rb#25
Selenium::WebDriver::Chrome::Bridge::COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#29
class Selenium::WebDriver::Chrome::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::HasNetworkConditions
  include ::Selenium::WebDriver::DriverExtensions::HasTouchScreen
  include ::Selenium::WebDriver::DriverExtensions::HasWebStorage
  include ::Selenium::WebDriver::DriverExtensions::HasLocation
  include ::Selenium::WebDriver::DriverExtensions::TakesScreenshot
  include ::Selenium::WebDriver::DriverExtensions::DownloadsFiles

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#37
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#49
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#59
  def execute_cdp(cmd, **params); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#53
  def quit; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/driver.rb#65
  def create_capabilities(opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#23
class Selenium::WebDriver::Chrome::Options < ::Selenium::WebDriver::Common::Options
  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#45
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#98
  def add_argument(arg); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#160
  def add_emulation(device_name: T.unsafe(nil), device_metrics: T.unsafe(nil), user_agent: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#84
  def add_encoded_extension(encoded); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#67
  def add_extension(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#113
  def add_option(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#128
  def add_preference(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#24
  def args; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#170
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#25
  def binary; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#25
  def binary=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#25
  def detach; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#25
  def detach=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#24
  def emulation; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#24
  def encoded_extensions; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#24
  def extensions; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#140
  def headless!; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#24
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#24
  def prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#25
  def profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#25
  def profile=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/options.rb#27
Selenium::WebDriver::Chrome::Options::KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#27
class Selenium::WebDriver::Chrome::Profile
  include ::Selenium::WebDriver::ProfileHelper
  extend ::Selenium::WebDriver::ProfileHelper::ClassMethods

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#32
  def initialize(model = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#59
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#54
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#44
  def add_encoded_extension(encoded); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#38
  def add_extension(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#73
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#30
  def directory; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#64
  def layout_on_disk; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#94
  def prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#104
  def prefs_file_for(dir); end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#98
  def read_model_prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/profile.rb#87
  def write_prefs_to(dir); end
end

# source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#27
class Selenium::WebDriver::Chrome::Service < ::Selenium::WebDriver::Service
  private

  # source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#45
  def extract_service_args(driver_opts); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/chrome/service.rb#37
    def driver_path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#22
module Selenium::WebDriver::Common; end

# source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#23
class Selenium::WebDriver::Common::Options
  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#47
  def camel_case(str); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#40
  def convert_json_key(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/options.rb#26
  def generate_as_json(value); end
end

# source://selenium-webdriver//lib/selenium/webdriver.rb#34
class Selenium::WebDriver::Dimension < ::Struct
  def height; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#34
  def height=(_); end

  def width; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#34
  def width=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#31
class Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::SearchContext

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#72
  def initialize(bridge, listener: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#267
  def [](sel); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#113
  def action; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#74
  def all(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#273
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#277
  def capabilities; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#175
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#139
  def current_url; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#231
  def execute_async_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#212
  def execute_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#56
  def first(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#129
  def get(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#77
  def inspect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#121
  def keyboard; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#104
  def manage; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#117
  def mouse; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#86
  def navigate; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#159
  def page_source; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#167
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#286
  def ref; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#212
  def script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#95
  def switch_to; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#149
  def title; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#196
  def window_handle; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#186
  def window_handles; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#290
  def bridge; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#292
  def service_url(opts); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/driver.rb#43
    def for(browser, opts = T.unsafe(nil)); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/takes_screenshot.rb#26
module Selenium::WebDriver::DriverExtensions; end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/downloads_files.rb#23
module Selenium::WebDriver::DriverExtensions::DownloadsFiles
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/downloads_files.rb#31
  def download_path=(path); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_addons.rb#23
module Selenium::WebDriver::DriverExtensions::HasAddons
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_addons.rb#33
  def install_addon(path, temporary = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_addons.rb#43
  def uninstall_addon(id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_debugger.rb#23
module Selenium::WebDriver::DriverExtensions::HasDebugger
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_debugger.rb#35
  def attach_debugger; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#23
module Selenium::WebDriver::DriverExtensions::HasLocation
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#24
  def location; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#28
  def location=(loc); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_location.rb#34
  def set_location(lat, lon, alt); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_conditions.rb#23
module Selenium::WebDriver::DriverExtensions::HasNetworkConditions
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_conditions.rb#31
  def network_conditions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_conditions.rb#44
  def network_conditions=(conditions); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#23
module Selenium::WebDriver::DriverExtensions::HasNetworkConnection
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#24
  def network_connection_type; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#34
  def network_connection_type=(connection_type); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#44
  def type_to_values; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#52
  def valid_type?(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_network_connection.rb#48
  def values_to_type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_permissions.rb#23
module Selenium::WebDriver::DriverExtensions::HasPermissions
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_permissions.rb#31
  def permissions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_permissions.rb#44
  def permissions=(permissions); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_remote_status.rb#23
module Selenium::WebDriver::DriverExtensions::HasRemoteStatus
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_remote_status.rb#24
  def remote_status; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_session_id.rb#27
module Selenium::WebDriver::DriverExtensions::HasSessionId
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_session_id.rb#33
  def session_id; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_touch_screen.rb#23
module Selenium::WebDriver::DriverExtensions::HasTouchScreen
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_touch_screen.rb#24
  def touch; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_touch_screen.rb#30
  def touch_screen; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_web_storage.rb#27
module Selenium::WebDriver::DriverExtensions::HasWebStorage
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_web_storage.rb#28
  def local_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/has_web_storage.rb#32
  def session_storage; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/rotatable.rb#27
module Selenium::WebDriver::DriverExtensions::Rotatable
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/rotatable.rb#55
  def orientation; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/rotatable.rb#38
  def rotate(orientation); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/rotatable.rb#38
  def rotation=(orientation); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/rotatable.rb#28
Selenium::WebDriver::DriverExtensions::Rotatable::ORIENTATIONS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/takes_screenshot.rb#27
module Selenium::WebDriver::DriverExtensions::TakesScreenshot
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/takes_screenshot.rb#34
  def save_screenshot(png_path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/takes_screenshot.rb#51
  def screenshot_as(format); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/uploads_files.rb#27
module Selenium::WebDriver::DriverExtensions::UploadsFiles
  # source://selenium-webdriver//lib/selenium/webdriver/common/driver_extensions/uploads_files.rb#52
  def file_detector=(detector); end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#22
module Selenium::WebDriver::Edge
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/edge.rb#35
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/edge.rb#29
    def driver_path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#23
module Selenium::WebDriver::Edge::Bridge
  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#25
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#69
  def maximize_window(handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#64
  def reposition_window(x, y, handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#52
  def resize_window(width, height, handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#38
  def send_keys_to_active_element(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#42
  def window_handle; end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#58
  def window_position(handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/bridge.rb#46
  def window_size(handle = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#29
class Selenium::WebDriver::Edge::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::TakesScreenshot

  # source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#32
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#53
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/driver.rb#57
  def quit; end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#23
class Selenium::WebDriver::Edge::Options
  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#42
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#58
  def add_extension_path(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#68
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#25
  def extension_paths; end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#24
  def in_private; end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#24
  def in_private=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#24
  def start_page; end

  # source://selenium-webdriver//lib/selenium/webdriver/edge/options.rb#24
  def start_page=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/edge/service.rb#27
class Selenium::WebDriver::Edge::Service < ::Selenium::WebDriver::Service
  private

  # source://selenium-webdriver//lib/selenium/webdriver/edge/service.rb#40
  def extract_service_args(driver_opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#22
class Selenium::WebDriver::Element
  include ::Selenium::WebDriver::SearchContext

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#31
  def initialize(bridge, id); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#40
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#115
  def [](name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#74
  def all(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#314
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#115
  def attribute(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#170
  def clear; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#73
  def click; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#223
  def css_value(prop); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#200
  def displayed?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#180
  def enabled?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#40
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#56
  def first(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#45
  def hash; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#36
  def inspect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#234
  def location; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#254
  def location_once_scrolled_into_view; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#127
  def property(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#244
  def rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#293
  def ref; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#190
  def selected?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#155
  def send_key(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#155
  def send_keys(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#264
  def size; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#223
  def style(prop); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#208
  def submit; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#87
  def tag_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#137
  def text; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#304
  def to_json(*_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#325
  def bridge; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/element.rb#327
  def selectable?; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#22
module Selenium::WebDriver::Error
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#369
    def const_missing(const_name); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#29
    def for_code(code); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#334
Selenium::WebDriver::Error::DEPRECATED_ERRORS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#289
Selenium::WebDriver::Error::ERRORS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#265
class Selenium::WebDriver::Error::ElementClickInterceptedError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::ElementNotDisplayedError = Selenium::WebDriver::Error::ElementNotInteractableError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#213
class Selenium::WebDriver::Error::ElementNotInteractableError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::ElementNotSelectableError = Selenium::WebDriver::Error::ElementNotInteractableError
Selenium::WebDriver::Error::ElementNotVisibleError = Selenium::WebDriver::Error::ElementNotInteractableError
Selenium::WebDriver::Error::ExpectedError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::IMEEngineActivationFailedError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::IMENotAvailableError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::IndexOutOfBoundsError = Selenium::WebDriver::Error::WebDriverError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#220
class Selenium::WebDriver::Error::InsecureCertificateError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#226
class Selenium::WebDriver::Error::InvalidArgumentError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#131
class Selenium::WebDriver::Error::InvalidCookieDomainError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::InvalidElementCoordinatesError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::InvalidElementStateError = Selenium::WebDriver::Error::ElementNotInteractableError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#186
class Selenium::WebDriver::Error::InvalidSelectorError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#246
class Selenium::WebDriver::Error::InvalidSessionIdError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::InvalidXpathSelectorError = Selenium::WebDriver::Error::InvalidSelectorError
Selenium::WebDriver::Error::InvalidXpathSelectorReturnTyperError = Selenium::WebDriver::Error::InvalidSelectorError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#108
class Selenium::WebDriver::Error::JavascriptError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#199
class Selenium::WebDriver::Error::MoveTargetOutOfBoundsError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::NoAlertOpenError = Selenium::WebDriver::Error::NoSuchAlertError
Selenium::WebDriver::Error::NoAlertPresentError = Selenium::WebDriver::Error::NoSuchAlertError
Selenium::WebDriver::Error::NoCollectionError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::NoScriptResultError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::NoStringError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::NoStringLengthError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::NoStringWrapperError = Selenium::WebDriver::Error::WebDriverError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#154
class Selenium::WebDriver::Error::NoSuchAlertError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::NoSuchCollectionError = Selenium::WebDriver::Error::WebDriverError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#233
class Selenium::WebDriver::Error::NoSuchCookieError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::NoSuchDocumentError = Selenium::WebDriver::Error::WebDriverError
Selenium::WebDriver::Error::NoSuchDriverError = Selenium::WebDriver::Error::WebDriverError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#56
class Selenium::WebDriver::Error::NoSuchElementError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#62
class Selenium::WebDriver::Error::NoSuchFrameError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#125
class Selenium::WebDriver::Error::NoSuchWindowError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#124
class Selenium::WebDriver::Error::NullPointerError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::ObsoleteElementError = Selenium::WebDriver::Error::StaleElementReferenceError
Selenium::WebDriver::Error::ScriptTimeOutError = Selenium::WebDriver::Error::ScriptTimeoutError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#275
class Selenium::WebDriver::Error::ScriptTimeoutError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/server_error.rb#23
class Selenium::WebDriver::Error::ServerError < ::StandardError
  # source://selenium-webdriver//lib/selenium/webdriver/remote/server_error.rb#24
  def initialize(response); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#192
class Selenium::WebDriver::Error::SessionNotCreatedError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#74
class Selenium::WebDriver::Error::StaleElementReferenceError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::TimeOutError = Selenium::WebDriver::Error::TimeoutError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#276
class Selenium::WebDriver::Error::TimeoutError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#239
class Selenium::WebDriver::Error::UnableToCaptureScreenError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#137
class Selenium::WebDriver::Error::UnableToSetCookieError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#252
class Selenium::WebDriver::Error::UnexpectedAlertOpenError < ::Selenium::WebDriver::Error::WebDriverError; end

Selenium::WebDriver::Error::UnexpectedJavascriptError = Selenium::WebDriver::Error::JavascriptError
Selenium::WebDriver::Error::UnhandledAlertError = Selenium::WebDriver::Error::UnexpectedAlertOpenError
Selenium::WebDriver::Error::UnhandledError = Selenium::WebDriver::Error::UnknownError

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#68
class Selenium::WebDriver::Error::UnknownCommandError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#94
class Selenium::WebDriver::Error::UnknownError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#258
class Selenium::WebDriver::Error::UnknownMethodError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#272
class Selenium::WebDriver::Error::UnsupportedOperationError < ::Selenium::WebDriver::Error::WebDriverError; end

# source://selenium-webdriver//lib/selenium/webdriver/common/error.rb#43
class Selenium::WebDriver::Error::WebDriverError < ::StandardError; end

Selenium::WebDriver::Error::XPathLookupError = Selenium::WebDriver::Error::InvalidSelectorError

# source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#26
module Selenium::WebDriver::FileReaper
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#39
    def <<(file); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#43
    def reap(file); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#51
    def reap!; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#28
    def reap=(_arg0); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#30
    def reap?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/file_reaper.rb#34
    def tmp_files; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#22
module Selenium::WebDriver::Firefox
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#53
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#47
    def driver_path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#59
    def path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#24
class Selenium::WebDriver::Firefox::Binary
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#54
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#36
  def start_with(profile, profile_path, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#63
  def wait; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#76
  def execute(*extra_args); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#85
  def modify_link_library_path(profile_path); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#118
    def path; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#109
    def path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#114
    def reset_path!; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#141
    def version; end

    private

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#162
    def macosx_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#156
    def windows_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#170
    def windows_registry_path; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#26
Selenium::WebDriver::Firefox::Binary::NO_FOCUS_LIBRARIES = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#25
Selenium::WebDriver::Firefox::Binary::NO_FOCUS_LIBRARY_NAME = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#34
Selenium::WebDriver::Firefox::Binary::QUIT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/binary.rb#33
Selenium::WebDriver::Firefox::Binary::WAIT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#44
Selenium::WebDriver::Firefox::DEFAULT_ASSUME_UNTRUSTED_ISSUER = T.let(T.unsafe(nil), TrueClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#42
Selenium::WebDriver::Firefox::DEFAULT_ENABLE_NATIVE_EVENTS = T.let(T.unsafe(nil), FalseClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#45
Selenium::WebDriver::Firefox::DEFAULT_LOAD_NO_FOCUS_LIB = T.let(T.unsafe(nil), FalseClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#41
Selenium::WebDriver::Firefox::DEFAULT_PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox.rb#43
Selenium::WebDriver::Firefox::DEFAULT_SECURE_SSL = T.let(T.unsafe(nil), FalseClass)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#23
module Selenium::WebDriver::Firefox::Driver
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#31
    def new(**opts); end

    private

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/driver.rb#41
    def marionette?(opts); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#27
class Selenium::WebDriver::Firefox::Extension
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#30
  def initialize(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#37
  def write_to(extensions_dir); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#50
  def create_root; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#63
  def read_id(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#67
  def read_id_from_install_rdf(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#85
  def read_id_from_manifest_json(directory); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/extension.rb#28
Selenium::WebDriver::Firefox::Extension::NAMESPACE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#24
class Selenium::WebDriver::Firefox::Launcher
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#28
  def initialize(binary, port, profile = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#101
  def assert_profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#83
  def connect_until_stable; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#68
  def create_profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#93
  def fetch_profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#64
  def find_free_port; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#48
  def launch; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#59
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#105
  def socket_lock; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#78
  def start; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#44
  def url; end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#25
Selenium::WebDriver::Firefox::Launcher::SOCKET_LOCK_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/launcher.rb#26
Selenium::WebDriver::Firefox::Launcher::STABLE_CONNECTION_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/legacy/driver.rb#23
module Selenium::WebDriver::Firefox::Legacy; end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/legacy/driver.rb#30
class Selenium::WebDriver::Firefox::Legacy::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::TakesScreenshot

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/legacy/driver.rb#33
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/legacy/driver.rb#68
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/legacy/driver.rb#72
  def quit; end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/bridge.rb#23
module Selenium::WebDriver::Firefox::Marionette; end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/bridge.rb#24
module Selenium::WebDriver::Firefox::Marionette::Bridge
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/bridge.rb#31
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/bridge.rb#35
  def install_addon(path, temporary); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/bridge.rb#41
  def uninstall_addon(id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/bridge.rb#26
Selenium::WebDriver::Firefox::Marionette::Bridge::COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/driver.rb#30
class Selenium::WebDriver::Firefox::Marionette::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::HasAddons
  include ::Selenium::WebDriver::DriverExtensions::HasWebStorage
  include ::Selenium::WebDriver::DriverExtensions::TakesScreenshot

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/driver.rb#35
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/driver.rb#51
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/driver.rb#55
  def quit; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/marionette/driver.rb#63
  def create_capabilities(opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#23
class Selenium::WebDriver::Firefox::Options < ::Selenium::WebDriver::Common::Options
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#45
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#64
  def add_argument(arg); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#79
  def add_option(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#94
  def add_preference(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#24
  def args; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#133
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#25
  def binary; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#25
  def binary=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#106
  def headless!; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#25
  def log_level; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#25
  def log_level=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#24
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#24
  def prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#24
  def profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#125
  def profile=(profile); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#147
  def process_profile(profile); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/options.rb#27
Selenium::WebDriver::Firefox::Options::KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#23
class Selenium::WebDriver::Firefox::Profile
  include ::Selenium::WebDriver::ProfileHelper
  extend ::Selenium::WebDriver::ProfileHelper::ClassMethods

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#70
  def initialize(model = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#114
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#145
  def add_extension(path, name = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#135
  def add_webdriver_extension; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#165
  def assume_untrusted_certificate_issuer=(bool); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#161
  def assume_untrusted_certificate_issuer?; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#192
  def encoded; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#95
  def layout_on_disk; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#37
  def load_no_focus_lib=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#153
  def load_no_focus_lib?; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#36
  def log_file; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#130
  def log_file=(file); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#36
  def name; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#37
  def native_events=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#149
  def native_events?; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#126
  def port=(port); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#169
  def proxy=(proxy); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#37
  def secure_ssl=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#157
  def secure_ssl?; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#222
  def delete_extensions_cache(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#226
  def delete_lock_files(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#232
  def extension_name_for(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#207
  def install_extensions(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#216
  def read_model_prefs; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#254
  def read_user_prefs(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#198
  def set_manual_proxy_preference(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#236
  def update_user_prefs_in(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#271
  def write_prefs(prefs, path); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#51
    def default_preferences; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#44
    def from_name(name); end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#40
    def ini; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#26
Selenium::WebDriver::Firefox::Profile::VALID_PREFERENCE_TYPES = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#27
Selenium::WebDriver::Firefox::Profile::WEBDRIVER_EXTENSION_PATH = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profile.rb#28
Selenium::WebDriver::Firefox::Profile::WEBDRIVER_PREFS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#24
class Selenium::WebDriver::Firefox::ProfilesIni
  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#25
  def initialize; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#32
  def [](name); end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#37
  def refresh; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#44
  def parse; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/profiles_ini.rb#66
  def path_for(name, is_relative, path); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#27
class Selenium::WebDriver::Firefox::Service < ::Selenium::WebDriver::Service
  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/service.rb#40
  def extract_service_args(driver_opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#24
module Selenium::WebDriver::Firefox::Util
  private

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#27
  def app_data_path; end

  # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#40
  def stringified?(str); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#27
    def app_data_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/firefox/util.rb#40
    def stringified?(str); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#22
module Selenium::WebDriver::HTML5; end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#23
class Selenium::WebDriver::HTML5::LocalStorage
  include ::Enumerable
  include ::Selenium::WebDriver::HTML5::SharedWebStorage

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#29
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#33
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#37
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#45
  def clear; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#41
  def delete(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#53
  def keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/local_storage.rb#49
  def size; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#23
class Selenium::WebDriver::HTML5::SessionStorage
  include ::Enumerable
  include ::Selenium::WebDriver::HTML5::SharedWebStorage

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#55
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#27
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#31
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#39
  def clear; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#35
  def delete(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#47
  def keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/session_storage.rb#43
  def size; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#23
module Selenium::WebDriver::HTML5::SharedWebStorage
  include ::Enumerable

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#43
  def each; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#39
  def empty?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#32
  def fetch(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#26
  def has_key?(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#26
  def key?(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/html5/shared_web_storage.rb#26
  def member?(key); end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#22
module Selenium::WebDriver::IE
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/ie.rb#32
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/ie.rb#26
    def driver_path=(path); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#30
class Selenium::WebDriver::IE::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::HasWebStorage
  include ::Selenium::WebDriver::DriverExtensions::TakesScreenshot

  # source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#34
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#44
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#48
  def quit; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/ie/driver.rb#56
  def create_capabilities(opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#23
class Selenium::WebDriver::IE::Options < ::Selenium::WebDriver::Common::Options
  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#88
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#100
  def add_argument(arg); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#115
  def add_option(name, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#55
  def args; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#123
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def browser_attach_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def browser_attach_timeout=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def element_scroll_behavior; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def element_scroll_behavior=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def ensure_clean_session; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def ensure_clean_session=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def file_upload_dialog_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def file_upload_dialog_timeout=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def force_create_process_api; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def force_create_process_api=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def force_shell_windows_api; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def force_shell_windows_api=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def full_page_screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def full_page_screenshot=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def ignore_protected_mode_settings; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def ignore_protected_mode_settings=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def ignore_zoom_level; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def ignore_zoom_level=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def initial_browser_url; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def initial_browser_url=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def native_events; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def native_events=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#55
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def persistent_hover; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def persistent_hover=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def require_window_focus; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def require_window_focus=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def use_per_process_proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def use_per_process_proxy=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#46
  def validate_cookie_document_type; end

  # source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#50
  def validate_cookie_document_type=(value); end
end

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#27
Selenium::WebDriver::IE::Options::CAPABILITIES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#24
Selenium::WebDriver::IE::Options::KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#26
Selenium::WebDriver::IE::Options::SCROLL_BOTTOM = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/ie/options.rb#25
Selenium::WebDriver::IE::Options::SCROLL_TOP = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#27
class Selenium::WebDriver::IE::Service < ::Selenium::WebDriver::Service
  private

  # source://selenium-webdriver//lib/selenium/webdriver/ie/service.rb#40
  def extract_service_args(driver_opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#22
module Selenium::WebDriver::Interactions
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#29
    def key(name); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#37
    def none(name = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#33
    def pointer(kind, **kwargs); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#25
class Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#28
  def initialize(name = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#26
  def actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#33
  def add_action(action); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#39
  def clear_actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#43
  def create_pause(duration = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#26
  def name; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/input_device.rb#47
  def no_actions?; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#23
class Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#28
  def initialize(source); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#26
  def source; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#24
Selenium::WebDriver::Interactions::Interaction::PAUSE = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#23
Selenium::WebDriver::Interactions::KEY = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#23
class Selenium::WebDriver::Interactions::KeyInput < ::Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#36
  def create_key_down(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#40
  def create_key_up(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#30
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#26
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#24
Selenium::WebDriver::Interactions::KeyInput::SUBTYPES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#44
class Selenium::WebDriver::Interactions::KeyInput::TypingInteraction < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#47
  def initialize(source, type, key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#53
  def assert_type(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#59
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_input.rb#45
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#25
Selenium::WebDriver::Interactions::NONE = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/none_input.rb#23
class Selenium::WebDriver::Interactions::NoneInput < ::Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/none_input.rb#28
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/none_input.rb#24
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#24
Selenium::WebDriver::Interactions::POINTER = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#35
class Selenium::WebDriver::Interactions::Pause < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#36
  def initialize(source, duration = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#45
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interaction.rb#41
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#128
class Selenium::WebDriver::Interactions::PointerCancel < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#133
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#129
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#23
class Selenium::WebDriver::Interactions::PointerInput < ::Selenium::WebDriver::Interactions::InputDevice
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#28
  def initialize(kind, name: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#45
  def assert_kind(pointer); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#63
  def create_pointer_cancel; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#55
  def create_pointer_down(button); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#51
  def create_pointer_move(duration: T.unsafe(nil), x: T.unsafe(nil), y: T.unsafe(nil), element: T.unsafe(nil), origin: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#59
  def create_pointer_up(button); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#37
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#26
  def kind; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#33
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#24
Selenium::WebDriver::Interactions::PointerInput::KIND = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#104
class Selenium::WebDriver::Interactions::PointerMove < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#109
  def initialize(source, duration, x, y, element: T.unsafe(nil), origin: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#121
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#117
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#107
Selenium::WebDriver::Interactions::PointerMove::ORIGINS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#106
Selenium::WebDriver::Interactions::PointerMove::POINTER = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#105
Selenium::WebDriver::Interactions::PointerMove::VIEWPORT = T.let(T.unsafe(nil), Symbol)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#68
class Selenium::WebDriver::Interactions::PointerPress < ::Selenium::WebDriver::Interactions::Interaction
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#72
  def initialize(source, direction, button); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#82
  def assert_button(button); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#93
  def assert_direction(direction); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#99
  def encode; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#78
  def type; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#69
Selenium::WebDriver::Interactions::PointerPress::BUTTONS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_input.rb#70
Selenium::WebDriver::Interactions::PointerPress::DIRECTIONS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/interactions.rb#26
Selenium::WebDriver::Interactions::SOURCE_TYPES = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#22
module Selenium::WebDriver::KeyActions
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#47
  def key_down(*args, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#74
  def key_up(*args, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#104
  def send_keys(*args, device: T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/key_actions.rb#136
  def key_action(*args, action: T.unsafe(nil), device: T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/keyboard.rb#26
class Selenium::WebDriver::Keyboard
  # source://selenium-webdriver//lib/selenium/webdriver/common/keyboard.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/keyboard.rb#41
  def press(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/keyboard.rb#53
  def release(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/keyboard.rb#31
  def send_keys(*keys); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/keyboard.rb#63
  def assert_modifier(key); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/keyboard.rb#61
Selenium::WebDriver::Keyboard::MODIFIERS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#22
module Selenium::WebDriver::Keys
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#113
    def [](key); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#123
    def encode(keys); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#131
    def encode_key(key); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/keys.rb#28
Selenium::WebDriver::Keys::KEYS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver.rb#36
class Selenium::WebDriver::Location < ::Struct
  def altitude; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#36
  def altitude=(_); end

  def latitude; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#36
  def latitude=(_); end

  def longitude; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#36
  def longitude=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#22
class Selenium::WebDriver::LogEntry
  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#25
  def initialize(level, timestamp, message); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#31
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#23
  def level; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#23
  def message; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#43
  def time; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#23
  def timestamp; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/log_entry.rb#39
  def to_s; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#36
class Selenium::WebDriver::Logger
  extend ::Forwardable

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#48
  def initialize; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def close(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def debug(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def debug?(*args, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#82
  def deprecate(old, new = T.unsafe(nil)); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def error(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def error?(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def fatal(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def fatal?(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def info(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def info?(*args, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#72
  def io; end

  # source://forwardable/1.3.2/forwardable.rb#229
  def level(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def level=(*args, &block); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#57
  def output=(io); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def warn(*args, &block); end

  # source://forwardable/1.3.2/forwardable.rb#229
  def warn?(*args, &block); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#95
  def create_logger(output); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logger.rb#106
  def default_level; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#22
class Selenium::WebDriver::Logs
  # source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#35
  def available_types; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/logs.rb#31
  def get(type); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#22
class Selenium::WebDriver::Manager
  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#44
  def add_cookie(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#92
  def all_cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#64
  def cookie_named(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#82
  def delete_all_cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#74
  def delete_cookie(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#104
  def logs; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#117
  def new_window(type = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#96
  def timeouts; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#136
  def window; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#165
  def convert_cookie(cookie); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#144
  def datetime_at(int); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#148
  def seconds_from(obj); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#161
  def strip_port(str); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/manager.rb#142
Selenium::WebDriver::Manager::SECONDS_PER_DAY = T.let(T.unsafe(nil), Float)

# source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#27
class Selenium::WebDriver::Mouse
  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#28
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#32
  def click(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#42
  def context_click(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#37
  def double_click(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#47
  def down(element = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#72
  def move_by(right_by, down_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#66
  def move_to(element, right_by = T.unsafe(nil), down_by = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#52
  def up(element = T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#82
  def assert_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/mouse.rb#78
  def move_if_needed(element); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#22
class Selenium::WebDriver::Navigation
  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#23
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#39
  def back; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#47
  def forward; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#55
  def refresh; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/navigation.rb#31
  def to(url); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#26
module Selenium::WebDriver::Platform
  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#139
  def assert_executable(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#133
  def assert_file(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#63
  def bitsize; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#53
  def ci; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#101
  def cygwin?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#114
  def cygwin_path(path, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#33
  def engine; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#147
  def exit_hook; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#153
  def find_binary(*binary_names); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#173
  def find_in_program_files(*binary_names); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#29
  def home; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#214
  def interfaces; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#198
  def ip; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#75
  def jruby?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#91
  def linux?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#190
  def localhost; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#87
  def mac?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#129
  def make_writable(file); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#106
  def null_device; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#37
  def os; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#79
  def ruby_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#121
  def unix_path(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#83
  def windows?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#125
  def windows_path(path); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#110
  def wrap_in_quotes_if_necessary(str); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#95
  def wsl?; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#139
    def assert_executable(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#133
    def assert_file(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#63
    def bitsize; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#53
    def ci; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#101
    def cygwin?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#114
    def cygwin_path(path, **opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#33
    def engine; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#147
    def exit_hook; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#153
    def find_binary(*binary_names); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#173
    def find_in_program_files(*binary_names); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#29
    def home; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#214
    def interfaces; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#198
    def ip; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#75
    def jruby?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#91
    def linux?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#190
    def localhost; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#87
    def mac?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#129
    def make_writable(file); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#106
    def null_device; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#37
    def os; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#79
    def ruby_version; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#121
    def unix_path(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#83
    def windows?; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#125
    def windows_path(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#110
    def wrap_in_quotes_if_necessary(str); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/platform.rb#95
    def wsl?; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver.rb#33
class Selenium::WebDriver::Point < ::Struct
  def x; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#33
  def x=(_); end

  def y; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#33
  def y=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#22
module Selenium::WebDriver::PointerActions
  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#235
  def click(element = T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#189
  def click_and_hold(element = T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#292
  def context_click(element = T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#29
  def default_move_duration; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#23
  def default_move_duration=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#264
  def double_click(element = T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#318
  def drag_and_drop(source, target, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#342
  def drag_and_drop_by(source, right_by, down_by, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#136
  def move_by(right_by, down_by, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#98
  def move_to(element, right_by = T.unsafe(nil), down_by = T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#163
  def move_to_location(x, y, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#48
  def pointer_down(button, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#65
  def pointer_up(button, device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#208
  def release(device: T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#351
  def button_action(button, action: T.unsafe(nil), device: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/interactions/pointer_actions.rb#358
  def get_pointer(device = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#22
class Selenium::WebDriver::PortProber
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#23
    def above(port); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#33
    def free?(port); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/port_prober.rb#28
Selenium::WebDriver::PortProber::IGNORED_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#29
module Selenium::WebDriver::ProfileHelper
  mixes_in_class_methods ::Selenium::WebDriver::ProfileHelper::ClassMethods

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#34
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#38
  def to_json(*_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#44
  def create_tmp_copy(directory); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#55
  def verify_model(model); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#30
    def included(base); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#64
module Selenium::WebDriver::ProfileHelper::ClassMethods
  # source://selenium-webdriver//lib/selenium/webdriver/common/profile_helper.rb#65
  def from_json(json); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#22
class Selenium::WebDriver::Proxy
  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#58
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#74
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#139
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def auto_detect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#104
  def auto_detect=(bool); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#74
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def ftp; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#79
  def ftp=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def http; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#84
  def http=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def no_proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#89
  def no_proxy=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def pac; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#99
  def pac=(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#109
  def socks=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks_password; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#119
  def socks_password=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks_username; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#114
  def socks_username=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def socks_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#124
  def socks_version=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def ssl; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#94
  def ssl=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#157
  def to_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#43
  def type; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#129
  def type=(type); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#45
    def json_create(data); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#31
Selenium::WebDriver::Proxy::ALLOWED = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/proxy.rb#23
Selenium::WebDriver::Proxy::TYPES = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver.rb#35
class Selenium::WebDriver::Rectangle < ::Struct
  def height; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#35
  def height=(_); end

  def width; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#35
  def width=(_); end

  def x; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#35
  def x=(_); end

  def y; end

  # source://selenium-webdriver//lib/selenium/webdriver.rb#35
  def y=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def members; end
    def new(*_arg0); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#22
module Selenium::WebDriver::Remote; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#23
class Selenium::WebDriver::Remote::Bridge
  include ::Selenium::WebDriver::Atoms
  include ::Selenium::WebDriver::BridgeHelper

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#77
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#139
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#33
  def capabilities; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#32
  def context; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#32
  def context=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#101
  def create_session(desired_capabilities, options = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#33
  def dialect; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#32
  def file_detector; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#32
  def file_detector=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#32
  def http; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#32
  def http=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#135
  def session_id; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#174
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#170
  def escaper; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#154
  def execute(command, opts = T.unsafe(nil), command_hash = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#180
  def merged_capabilities(oss_capabilities, options = T.unsafe(nil)); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#44
    def handshake(**opts); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#28
Selenium::WebDriver::Remote::Bridge::COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/remote/bridge.rb#27
Selenium::WebDriver::Remote::Bridge::PORT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#27
class Selenium::WebDriver::Remote::Capabilities
  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#191
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#266
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#204
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#200
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#233
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def browser_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def browser_name=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def css_selectors_enabled; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def css_selectors_enabled=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def css_selectors_enabled?; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#266
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def firefox_profile; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def firefox_profile=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#59
  def javascript_enabled; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def javascript_enabled=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#59
  def javascript_enabled?; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#208
  def merge!(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def native_events; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def native_events=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def native_events?; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def platform; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def platform=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#218
  def proxy=(proxy); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def rotatable; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def rotatable=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def rotatable?; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def takes_screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def takes_screenshot=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def takes_screenshot?; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#262
  def to_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#43
  def version; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#50
  def version=(value); end

  protected

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#275
  def capabilities; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#279
  def camel_case(str); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#75
    def chrome(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#83
    def edge(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#90
    def firefox(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#100
    def firefox_legacy(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#109
    def htmlunit(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#115
    def htmlunitwithjs(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#122
    def ie(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#122
    def internet_explorer(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#157
    def json_create(data); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#133
    def phantomjs(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#143
    def safari(opts = T.unsafe(nil)); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/capabilities.rb#28
Selenium::WebDriver::Remote::Capabilities::DEFAULTS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/remote/driver.rb#29
class Selenium::WebDriver::Remote::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::UploadsFiles
  include ::Selenium::WebDriver::DriverExtensions::TakesScreenshot
  include ::Selenium::WebDriver::DriverExtensions::HasSessionId
  include ::Selenium::WebDriver::DriverExtensions::Rotatable
  include ::Selenium::WebDriver::DriverExtensions::HasRemoteStatus
  include ::Selenium::WebDriver::DriverExtensions::HasWebStorage

  # source://selenium-webdriver//lib/selenium/webdriver/remote/driver.rb#37
  def initialize(opts = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#23
module Selenium::WebDriver::Remote::Http; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#24
class Selenium::WebDriver::Remote::Http::Common
  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#36
  def initialize; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#48
  def call(verb, url, command_hash); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#44
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#40
  def quit_errors; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#34
  def server_url=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#33
  def timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#33
  def timeout=(_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#79
  def create_response(code, body, content_type); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#75
  def request(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#69
  def server_url; end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#26
Selenium::WebDriver::Remote::Http::Common::CONTENT_TYPE = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#27
Selenium::WebDriver::Remote::Http::Common::DEFAULT_HEADERS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/common.rb#25
Selenium::WebDriver::Remote::Http::Common::MAX_REDIRECTS = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#28
class Selenium::WebDriver::Remote::Http::Default < ::Selenium::WebDriver::Remote::Http::Common
  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#39
  def initialize(open_timeout: T.unsafe(nil), read_timeout: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#53
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#31
  def open_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#31
  def open_timeout=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#29
  def proxy=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#32
  def read_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#32
  def read_timeout=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#47
  def timeout=(value); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#59
  def http; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#132
  def new_http_client; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#118
  def new_request_for(verb, url, headers, payload); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#146
  def proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#77
  def request(verb, url, headers, payload, redirects = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#128
  def response_for(request); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#158
  def use_proxy?; end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/http/default.rb#75
Selenium::WebDriver::Remote::Http::Default::MAX_RETRIES = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#23
module Selenium::WebDriver::Remote::OSS; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#31
class Selenium::WebDriver::Remote::OSS::Bridge < ::Selenium::WebDriver::Remote::Bridge
  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#33
  def initialize(capabilities, session_id, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#75
  def accept_alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#313
  def action; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#544
  def active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#288
  def add_cookie(cookie); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#83
  def alert=(keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#87
  def alert_text; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#91
  def authentication(credentials); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#457
  def available_log_types; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#388
  def clear_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#212
  def clear_local_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#236
  def clear_session_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#331
  def click; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#327
  def click_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#141
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#43
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#339
  def context_click; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#296
  def cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#300
  def delete_all_cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#292
  def delete_cookie(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#39
  def dialect; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#79
  def dismiss_alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#335
  def double_click; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#396
  def drag_element(element, right_by, down_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#482
  def element_attribute(element, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#532
  def element_displayed?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#524
  def element_enabled?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#499
  def element_location(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#512
  def element_location_once_scrolled_into_view(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#487
  def element_property(element, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#505
  def element_rect(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#528
  def element_selected?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#518
  def element_size(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#478
  def element_tag_name(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#495
  def element_text(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#491
  def element_value(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#536
  def element_value_of_css_property(element, prop); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#273
  def execute_async_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#266
  def execute_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#550
  def find_element_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#560
  def find_elements_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#51
  def get(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#99
  def go_back; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#103
  def go_forward; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#59
  def implicit_wait_timeout=(milliseconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#322
  def keyboard; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#196
  def local_storage_item(key, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#208
  def local_storage_keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#216
  def local_storage_size; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#244
  def location; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#462
  def log(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#284
  def manage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#167
  def maximize_window(handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#317
  def mouse; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#343
  def mouse_down; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#351
  def mouse_move_to(element, x = T.unsafe(nil), y = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#347
  def mouse_up; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#254
  def network_connection; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#258
  def network_connection=(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#115
  def page_source; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#135
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#145
  def refresh; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#204
  def remove_local_storage_item(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#228
  def remove_session_storage_item(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#177
  def reposition_window(x, y, handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#161
  def resize_window(width, height, handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#449
  def screen_orientation; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#445
  def screen_orientation=(orientation); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#188
  def screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#63
  def script_timeout=(milliseconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#362
  def send_keys_to_active_element(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#366
  def send_keys_to_element(element, keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#55
  def session_capabilities; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#220
  def session_storage_item(key, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#232
  def session_storage_keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#240
  def session_storage_size; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#249
  def set_location(lat, lon, alt); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#47
  def status; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#392
  def submit_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#544
  def switch_to_active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#131
  def switch_to_default_content; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#123
  def switch_to_frame(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#127
  def switch_to_parent_frame; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#119
  def switch_to_window(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#67
  def timeout(type, milliseconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#111
  def title; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#404
  def touch_double_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#412
  def touch_down(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#438
  def touch_element_flick(element, right_by, down_by, speed); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#434
  def touch_flick(xspeed, yspeed); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#408
  def touch_long_press(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#420
  def touch_move(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#424
  def touch_scroll(element, x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#400
  def touch_single_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#416
  def touch_up(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#379
  def upload(local_file); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#107
  def url; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#157
  def window_handle; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#153
  def window_handles; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#182
  def window_position(handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#171
  def window_size(handle = T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#574
  def assert_javascript_enabled; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/oss/bridge.rb#586
  def execute(*args); end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/oss/commands.rb#32
Selenium::WebDriver::Remote::OSS::Bridge::COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#24
class Selenium::WebDriver::Remote::Response
  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#30
  def initialize(code, payload = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#65
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#27
  def code; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#37
  def error; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#47
  def error_message; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#27
  def payload; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#28
  def payload=(_arg0); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#79
  def add_backtrace(ex); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#71
  def assert_ok; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#99
  def backtrace_from_remote(server_trace); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#116
  def error_payload; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#122
  def status; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#128
  def value; end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/response.rb#25
Selenium::WebDriver::Remote::Response::STACKTRACE_KEY = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#25
module Selenium::WebDriver::Remote::W3C; end

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#33
class Selenium::WebDriver::Remote::W3C::Bridge < ::Selenium::WebDriver::Remote::Bridge
  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#35
  def initialize(capabilities, session_id, **opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#79
  def accept_alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#346
  def action(async = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#346
  def actions(async = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#535
  def active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#322
  def add_cookie(cookie); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#87
  def alert=(keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#91
  def alert_text; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#398
  def clear_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#252
  def clear_local_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#276
  def clear_session_storage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#370
  def click_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#160
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#45
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#330
  def cookie(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#334
  def cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#338
  def delete_all_cookies; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#326
  def delete_cookie(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#41
  def dialect; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#83
  def dismiss_alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#409
  def drag_element(element, right_by, down_by); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#474
  def element_attribute(element, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#522
  def element_displayed?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#514
  def element_enabled?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#491
  def element_location(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#503
  def element_location_once_scrolled_into_view(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#479
  def element_property(element, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#497
  def element_rect(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#518
  def element_selected?(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#508
  def element_size(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#470
  def element_tag_name(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#487
  def element_text(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#483
  def element_value(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#527
  def element_value_of_css_property(element, prop); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#309
  def execute_async_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#304
  def execute_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#541
  def find_element_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#552
  def find_elements_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#204
  def full_screen_window; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#58
  def get(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#99
  def go_back; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#103
  def go_forward; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#62
  def implicit_wait_timeout=(milliseconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#358
  def keyboard; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#236
  def local_storage_item(key, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#248
  def local_storage_keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#256
  def local_storage_size; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#284
  def location; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#318
  def manage; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#198
  def maximize_window(handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#194
  def minimize_window; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#354
  def mouse; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#292
  def network_connection; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#296
  def network_connection=(_type); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#131
  def new_window(type); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#115
  def page_source; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#154
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#164
  def refresh; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#366
  def release_actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#244
  def remove_local_storage_item(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#268
  def remove_session_storage_item(key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#208
  def reposition_window(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#180
  def resize_window(width, height, handle = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#462
  def screen_orientation; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#458
  def screen_orientation=(orientation); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#228
  def screenshot; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#66
  def script_timeout=(milliseconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#362
  def send_actions(data); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#374
  def send_keys_to_element(element, keys); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#260
  def session_storage_item(key, value = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#272
  def session_storage_keys; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#280
  def session_storage_size; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#288
  def set_location(_lat, _lon, _alt); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#217
  def set_window_rect(x: T.unsafe(nil), y: T.unsafe(nil), width: T.unsafe(nil), height: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#54
  def status; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#402
  def submit_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#535
  def switch_to_active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#148
  def switch_to_default_content; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#139
  def switch_to_frame(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#144
  def switch_to_parent_frame; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#135
  def switch_to_window(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#70
  def timeout(type, milliseconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#111
  def title; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#417
  def touch_double_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#425
  def touch_down(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#451
  def touch_element_flick(element, right_by, down_by, speed); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#447
  def touch_flick(xspeed, yspeed); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#421
  def touch_long_press(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#433
  def touch_move(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#437
  def touch_scroll(element, x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#413
  def touch_single_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#429
  def touch_up(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#389
  def upload(local_file); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#107
  def url; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#176
  def window_handle; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#172
  def window_handles; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#212
  def window_position; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#223
  def window_rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#186
  def window_size(handle = T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#570
  def convert_locators(how, what); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#592
  def escape_css(string); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#566
  def execute(*_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/commands.rb#31
Selenium::WebDriver::Remote::W3C::Bridge::COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#587
Selenium::WebDriver::Remote::W3C::Bridge::ESCAPE_CSS_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#152
Selenium::WebDriver::Remote::W3C::Bridge::QUIT_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/bridge.rb#588
Selenium::WebDriver::Remote::W3C::Bridge::UNICODE_CODE_POINT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#32
class Selenium::WebDriver::Remote::W3C::Capabilities
  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#217
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#288
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#230
  def [](key); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#226
  def []=(key, value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def accept_insecure_certs; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def accept_insecure_certs=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def accessibility_checks; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def accessibility_checks=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#259
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def browser_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def browser_name=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def browser_version; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def browser_version=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def device; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def device=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#288
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def implicit_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def implicit_timeout=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#234
  def merge!(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def page_load_strategy; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def page_load_strategy=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def page_load_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def page_load_timeout=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def platform; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def platform=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def platform_name; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def platform_name=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def proxy; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#244
  def proxy=(proxy); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def remote_session_id; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def remote_session_id=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def script_timeout; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def script_timeout=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def set_window_rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def set_window_rect=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def strict_file_interactability; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def strict_file_interactability=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def timeouts; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def timeouts=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#284
  def to_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def unhandled_prompt_behavior; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def unhandled_prompt_behavior=(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#62
  def version; end

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#68
  def version=(value); end

  protected

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#298
  def capabilities; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#302
  def camel_case(str); end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#93
    def edge(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#99
    def ff(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#99
    def firefox(opts = T.unsafe(nil)); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#148
    def from_oss(oss_capabilities); end

    # source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#111
    def json_create(data); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#34
Selenium::WebDriver::Remote::W3C::Capabilities::EXTENSION_CAPABILITY_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/remote/w3c/capabilities.rb#36
Selenium::WebDriver::Remote::W3C::Capabilities::KNOWN = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/safari/bridge.rb#22
module Selenium::WebDriver::Safari
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#55
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#49
    def driver_path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#41
    def path; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#36
    def path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#28
    def technology_preview; end

    # source://selenium-webdriver//lib/selenium/webdriver/safari.rb#32
    def technology_preview!; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/bridge.rb#23
module Selenium::WebDriver::Safari::Bridge
  # source://selenium-webdriver//lib/selenium/webdriver/safari/bridge.rb#44
  def attach_debugger; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/bridge.rb#32
  def commands(command); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/bridge.rb#36
  def permissions; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/bridge.rb#40
  def permissions=(permissions); end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/bridge.rb#26
Selenium::WebDriver::Safari::Bridge::COMMANDS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#29
class Selenium::WebDriver::Safari::Driver < ::Selenium::WebDriver::Driver
  include ::Selenium::WebDriver::DriverExtensions::HasDebugger
  include ::Selenium::WebDriver::DriverExtensions::HasPermissions
  include ::Selenium::WebDriver::DriverExtensions::TakesScreenshot

  # source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#34
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#46
  def browser; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#50
  def quit; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/safari/driver.rb#58
  def create_capabilities(opts = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#23
class Selenium::WebDriver::Safari::Options
  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#40
  def initialize(**opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#49
  def as_json(*_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#24
  def automatic_inspection; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#24
  def automatic_inspection=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#24
  def automatic_profiling; end

  # source://selenium-webdriver//lib/selenium/webdriver/safari/options.rb#24
  def automatic_profiling=(_arg0); end
end

# source://selenium-webdriver//lib/selenium/webdriver/safari/service.rb#27
class Selenium::WebDriver::Safari::Service < ::Selenium::WebDriver::Service; end

# source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#22
module Selenium::WebDriver::SearchContext
  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#56
  def find_element(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#74
  def find_elements(*args); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#88
  def extract_args(args); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/search_context.rb#24
Selenium::WebDriver::SearchContext::FINDERS = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#27
class Selenium::WebDriver::Service
  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#89
  def initialize(path: T.unsafe(nil), port: T.unsafe(nil), args: T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#81
  def executable_path; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#80
  def host; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#80
  def host=(_arg0); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#103
  def start; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#115
  def stop; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#126
  def uri; end

  protected

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#213
  def extract_service_args(driver_opts); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#132
  def binary_path(path = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#142
  def build_process(*command); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#203
  def cannot_connect_error_text; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#155
  def connect_to_server; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#196
  def connect_until_stable; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#164
  def find_free_port; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#192
  def process_exited?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#188
  def process_running?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#207
  def socket_lock; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#168
  def start_process; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#175
  def stop_process; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#182
  def stop_server; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#40
    def chrome(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#38
    def default_port; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#38
    def driver_path; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#74
    def driver_path=(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#66
    def edge(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#38
    def executable; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#44
    def firefox(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#61
    def ie(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#61
    def internet_explorer(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#38
    def missing_text; end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#70
    def safari(**opts); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#38
    def shutdown_supported; end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#29
Selenium::WebDriver::Service::SOCKET_LOCK_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#28
Selenium::WebDriver::Service::START_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/service.rb#30
Selenium::WebDriver::Service::STOP_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#26
class Selenium::WebDriver::SocketLock
  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#27
  def initialize(port, timeout); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#37
  def locked; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#67
  def can_lock?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#59
  def current_time; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#77
  def did_lock?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#49
  def lock; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_lock.rb#63
  def release; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#25
class Selenium::WebDriver::SocketPoller
  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#26
  def initialize(host, port, timeout = T.unsafe(nil), interval = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#51
  def closed?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#40
  def connected?; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#105
  def conn_completed?(sock); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#121
  def current_time; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#78
  def listening?; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#101
  def socket_writable?(sock); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#109
  def with_timeout; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#63
Selenium::WebDriver::SocketPoller::CONNECTED_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#57
Selenium::WebDriver::SocketPoller::CONNECT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/socket_poller.rb#59
Selenium::WebDriver::SocketPoller::NOT_CONNECTED_ERRORS = T.let(T.unsafe(nil), Array)

# source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#22
module Selenium::WebDriver::Support; end

# source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#48
class Selenium::WebDriver::Support::AbstractEventListener
  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#71
  def after_change_value_of(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#67
  def after_click(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#83
  def after_close(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#75
  def after_execute_script(script, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#63
  def after_find(by, what, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#55
  def after_navigate_back(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#59
  def after_navigate_forward(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#51
  def after_navigate_to(url, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#79
  def after_quit(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#69
  def before_change_value_of(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#65
  def before_click(element, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#81
  def before_close(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#73
  def before_execute_script(script, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#61
  def before_find(by, what, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#53
  def before_navigate_back(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#57
  def before_navigate_forward(driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#49
  def before_navigate_to(url, driver); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/abstract_event_listener.rb#77
  def before_quit(driver); end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/block_event_listener.rb#23
class Selenium::WebDriver::Support::BlockEventListener
  # source://selenium-webdriver//lib/selenium/webdriver/support/block_event_listener.rb#24
  def initialize(callback); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/block_event_listener.rb#28
  def method_missing(meth, *args); end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#23
class Selenium::WebDriver::Support::Color
  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#112
  def initialize(red, green, blue, alpha = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#119
  def ==(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def alpha; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def blue; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#119
  def eql?(other); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def green; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#127
  def hash; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#140
  def hex; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#48
  def red; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#131
  def rgb; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#135
  def rgba; end

  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#75
    def from_hsl(h, s, l, a); end

    # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#50
    def from_string(str); end

    # source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#97
    def hue_to_rgb(lum1, lum2, hue); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#39
Selenium::WebDriver::Support::Color::HEX3_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#38
Selenium::WebDriver::Support::Color::HEX_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#43
Selenium::WebDriver::Support::Color::HSLA_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#40
Selenium::WebDriver::Support::Color::HSL_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#30
Selenium::WebDriver::Support::Color::RGBA_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#34
Selenium::WebDriver::Support::Color::RGBA_PCT_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#24
Selenium::WebDriver::Support::Color::RGB_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/color.rb#27
Selenium::WebDriver::Support::Color::RGB_PCT_PATTERN = T.let(T.unsafe(nil), Regexp)

# source://selenium-webdriver//lib/selenium/webdriver/support/escaper.rb#23
module Selenium::WebDriver::Support::Escaper
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/support/escaper.rb#24
    def escape(str); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#27
class Selenium::WebDriver::Support::EventFiringBridge
  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#28
  def initialize(delegate, listener); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#62
  def clear_element(ref); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#56
  def click_element(ref); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#100
  def close; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#90
  def execute_script(script, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#74
  def find_element_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#82
  def find_elements_by(how, what, parent = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#38
  def get(url); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#50
  def go_back; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#44
  def go_forward; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#96
  def quit; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#68
  def send_keys_to_element(ref, keys); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#106
  def create_element(ref); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#115
  def dispatch(name, *args); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#111
  def driver; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/event_firing_bridge.rb#123
  def method_missing(meth, *args, &blk); end
end

# source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#23
class Selenium::WebDriver::Support::Select
  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#28
  def initialize(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#155
  def deselect_all; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#124
  def deselect_by(how, what); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#74
  def first_selected_option; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#43
  def multiple?; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#53
  def options; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#143
  def select_all; end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#101
  def select_by(how, what); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#63
  def selected_options; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#207
  def deselect_by_index(index); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#187
  def deselect_by_text(text); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#197
  def deselect_by_value(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#221
  def deselect_option(option); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#233
  def deselect_options(opts); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#260
  def find_by_index(index); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#241
  def find_by_text(text); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#264
  def find_by_value(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#171
  def select_by_index(index); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#163
  def select_by_text(text); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#179
  def select_by_value(value); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#217
  def select_option(option); end

  # source://selenium-webdriver//lib/selenium/webdriver/support/select.rb#225
  def select_options(opts); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#22
class Selenium::WebDriver::TargetLocator
  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#27
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#90
  def active_element; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#106
  def alert; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#98
  def default_content; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#35
  def frame(id); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#43
  def parent_frame; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/target_locator.rb#57
  def window(id); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#22
class Selenium::WebDriver::Timeouts
  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#23
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#31
  def implicit_wait=(seconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#50
  def page_load=(seconds); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/timeouts.rb#41
  def script_timeout=(seconds); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#25
class Selenium::WebDriver::TouchActionBuilder < ::Selenium::WebDriver::ActionBuilder
  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#27
  def initialize(mouse, keyboard, touch_screen); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#52
  def double_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#62
  def down(x, y = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#40
  def flick(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#57
  def long_press(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#72
  def move(x, y = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#33
  def scroll(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#47
  def single_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_action_builder.rb#67
  def up(x, y = T.unsafe(nil)); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#22
class Selenium::WebDriver::TouchScreen
  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#29
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#38
  def double_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#48
  def down(x, y = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#77
  def flick(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#43
  def long_press(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#58
  def move(x, y = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#63
  def scroll(*args); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#33
  def single_tap(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#53
  def up(x, y = T.unsafe(nil)); end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#116
  def assert_element(element); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#101
  def coords_from(x, y); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/touch_screen.rb#23
Selenium::WebDriver::TouchScreen::FLICK_SPEED = T.let(T.unsafe(nil), Hash)

# source://selenium-webdriver//lib/selenium/webdriver/version.rb#22
Selenium::WebDriver::VERSION = T.let(T.unsafe(nil), String)

# source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#22
class Selenium::WebDriver::W3CActionBuilder
  include ::Selenium::WebDriver::KeyActions
  include ::Selenium::WebDriver::PointerActions

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#41
  def initialize(bridge, mouse, keyboard, async = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#80
  def add_key_input(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#62
  def add_pointer_input(kind, name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#173
  def clear_all_actions; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#25
  def devices; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#93
  def get_device(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#113
  def key_inputs; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#133
  def pause(device, duration = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#154
  def pauses(device, number, duration = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#163
  def perform; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#103
  def pointer_inputs; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#181
  def release_actions; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#203
  def add_input(device); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_action_builder.rb#193
  def tick(*action_devices); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/w3c_manager.rb#22
class Selenium::WebDriver::W3CManager < ::Selenium::WebDriver::Manager
  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_manager.rb#31
  def cookie_named(name); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/w3c_manager.rb#39
  def delete_all_cookies; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#22
class Selenium::WebDriver::Wait
  # source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#36
  def initialize(opts = T.unsafe(nil)); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#50
  def until; end

  private

  # source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#78
  def current_time; end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#24
Selenium::WebDriver::Wait::DEFAULT_INTERVAL = T.let(T.unsafe(nil), Float)

# source://selenium-webdriver//lib/selenium/webdriver/common/wait.rb#23
Selenium::WebDriver::Wait::DEFAULT_TIMEOUT = T.let(T.unsafe(nil), Integer)

# source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#26
class Selenium::WebDriver::Window
  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#31
  def initialize(bridge); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#158
  def full_screen; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#142
  def maximize; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#150
  def minimize; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#134
  def move_to(x, y); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#81
  def position; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#66
  def position=(point); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#109
  def rect; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#91
  def rect=(rectangle); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#122
  def resize_to(width, height); end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#56
  def size; end

  # source://selenium-webdriver//lib/selenium/webdriver/common/window.rb#41
  def size=(dimension); end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#31
module Selenium::WebDriver::Zipper
  class << self
    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#35
    def unzip(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#52
    def zip(path); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#63
    def zip_file(path); end

    private

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#88
    def add_zip_entry(zip, file, entry_name); end

    # source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#74
    def with_tmp_zip(&blk); end
  end
end

# source://selenium-webdriver//lib/selenium/webdriver/common/zipper.rb#32
Selenium::WebDriver::Zipper::EXTENSIONS = T.let(T.unsafe(nil), Array)
